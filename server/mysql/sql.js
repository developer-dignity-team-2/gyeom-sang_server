module.exports = {
  userDetail: `select t1.*, t2.dining_score from user t1 inner join user_question_score_aggregation t2 on t1.email = t2.email where t1.email = ?; `,
  userInsert: `insert into user set ?`,
  userAggregationDetail: `select * from user u inner join user_question_score_aggregation uqsa on u.email = uqsa.email where u.email = ?`,
  userUpdate: `update user set ? where email = ?`,
  scoreInsert: `insert into user_question_score_aggregation set ?`,
  scoreDetail: `select * from user_question_score_aggregation where email = ?`,
  scoreUpdate: `update user_question_score_aggregation set ? where email = ?`,
  hostQuestionList: `select * from host_questions`,
  commonQuestionList: `select * from common_questions`,
  babsangList: `select t1.*, t2.nickname, t2.profile_image, IFNULL((select uf.active_yn from user_favorites uf where uf.dining_table_id = t1.id and uf.user_email = ? order by create_date desc limit 1), 'N') as active_yn from dining_table t1 inner join user t2 on t1.host_email = t2.email`,
  babsangListSearch: `select t1.*, t2.nickname, t2.profile_image, IFNULL((select uf.active_yn from user_favorites uf where uf.dining_table_id = t1.id and uf.user_email = ? order by create_date desc limit 1), 'N') as active_yn from dining_table t1 inner join user t2 on t1.host_email = t2.email where t1.restaurant_name like ?`,
  babsangDetail: `select t1.*, t2.nickname, t2.age_range, t2.profile_image, t2.profile_description, t3.dining_score,
  (select count(*) from dining_table_spoons where dining_table_id = ?) as spoon_count from dining_table t1
  inner join user t2 on t1.host_email = t2.email inner join user_question_score_aggregation t3 on t1.host_email = t3.email where id = ?`,
  babsangInsert: `insert into dining_table set ?`,
  babsangUpdate: `update dining_table set ? where id = ? and host_email = ?`,
  babsangDelete: `delete from dining_table where id = ?`,
  babsangSpoonsList: `select t1.*, t2.host_email, t3.gender as spoon_gender, t3.nickname as spoon_nickname, t3.profile_image as spoon_profile_image, t3.age_range as spoon_age_range, (select dining_score from user_question_score_aggregation as uqsa where uqsa.email = t1.spoon_email) as spoon_dining_score, (select nickname from user u where u.email = t2.host_email) as host_nickname from dining_table_spoons t1 inner join dining_table t2 on t1.dining_table_id = t2.id inner join user t3 on t1.spoon_email = t3.email where t1.dining_table_id = ?`,
  babsangSpoonsListDetail: `select t1.*, t2.host_email, t2.restaurant_name, t3.nickname as spoon_nickname, (select dining_score from user_question_score_aggregation as uqsa where uqsa.email = t1.spoon_email) as spoon_dining_score from dining_table_spoons t1 inner join dining_table t2 on t1.dining_table_id = t2.id inner join user t3 on t1.spoon_email = t3.email where t1.spoon_email = ? and t1.dining_table_id = ?`,
  babsangSpoonsInsert: `insert into dining_table_spoons set ?`,
  babsangSpoonsUpdate: `update dining_table_spoons set ? where spoon_email = ? and dining_table_id = ?`,
  babsangAppliedList: `select t1.*, (select u.nickname from user u where u.email = t1.host_email) as host_nickname, (select u.profile_image from user u where u.email = t1.host_email) as host_profile_image from dining_table t1 inner join dining_table_spoons t2 on t1.id = t2.dining_table_id where t2.spoon_email = ? and t2.apply_yn = 'Y'`,
  babsangCreatedList: `select t1.*, (select u.nickname from user u where u.email = t1.host_email) as host_nickname, (select u.profile_image from user u where u.email = t1.host_email) as host_profile_image from dining_table t1 where host_email = ?`,
  babsangSelectedList: `select t1.*, (select u.nickname from user u where u.email = t1.host_email) as host_nickname, (select u.profile_image from user u where u.email = t1.host_email) as host_profile_image from dining_table t1 inner join dining_table_spoons t2 on t1.id = t2.dining_table_id where t2.spoon_email = ? and t2.selected_yn = 'Y'`,
  babsangBookmarkedList: `select distinct t1.*, t2.active_yn, (select u.nickname from user u where u.email = t1.host_email) as host_nickname, (select u.profile_image from user u where u.email = t1.host_email) as host_profile_image from dining_table t1 inner join user_favorites t2 on t1.id = t2.dining_table_id where t2.user_email = ? and t2.active_yn = 'Y'`,
  babsangBookmarkInsert: `insert into user_favorites set ?`,
  babsangBookmarkUpdate: `update user_favorites set ? where user_email = ? and dining_table_id = ?`,
  commentList: `select t1.*, t2.nickname, t2.profile_image from comment t1 inner join user t2 on t1.user_email = t2.email where dining_id = ?`,
  commentInsert: `insert into comment set ?`,
  commentUpdate: `update comment set ? where id = ? and user_email = ?`,
  commentDelete: `delete from comment where id = ? and user_email = ?`,
  messageList: `select t1.*, (select u.nickname from user u where t1.sender_email = u.email) as sender_nickname, (select u.nickname from user u where t1.receiver_email = u.email) as receiver_nickname, t2.restaurant_name, t2.restaurant_location, t2.dining_status from message t1 inner join dining_table t2 on t1.dining_table_id = t2.id where sender_email = ? or receiver_email = ?`,
  messageDetail: `select t1.*, t2.*, t3.gender, t3.nickname, t3.profile_image, t3.profile_description, t3.age_range, (select dining_score from user_question_score_aggregation as uqsa where uqsa.email = t2.host_email) as host_dining_score from message t1 inner join dining_table t2 on t1.dining_table_id = t2.id inner join user t3 on t2.host_email = t3.email where t1.id = ?`,
  messageInsert: `insert into message set ?`,
  messageUpdate: `update message set ? where id = ?`,
  messageDelete: `delete from message where id = ?`,
  socketTest: `select  t2.spoon_email, t3.nickname from dining_table t1 inner join dining_table_spoons t2 on t1.id = t2.dining_table_id inner join user t3 on t2.spoon_email = t3.email where id = '?' and selected_yn = 'Y'`,
};
